definitions:
  handler.Response:
    properties:
      data: {}
      description:
        type: string
      status:
        type: integer
    type: object
  models.Airport:
    properties:
      address:
        type: string
      city:
        type: string
      city_id:
        type: string
      code:
        type: string
      country:
        type: string
      country_id:
        type: string
      created_at:
        type: string
      gmt:
        type: string
      guid:
        type: string
      id:
        type: string
      image:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      product_count:
        type: integer
      radius:
        type: string
      search_text:
        type: string
      timezone_id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.City:
    properties:
      city_code:
        type: string
      country_id:
        type: string
      country_name:
        type: string
      created_at:
        type: string
      guid:
        type: string
      id:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      offset:
        type: string
      timezone_id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Country:
    properties:
      code:
        type: string
      continent:
        type: string
      created_at:
        type: string
      guid:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateAirport:
    properties:
      address:
        type: string
      city:
        type: string
      city_id:
        type: string
      code:
        type: string
      country:
        type: string
      country_id:
        type: string
      gmt:
        type: string
      guid:
        type: string
      image:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      product_count:
        type: integer
      radius:
        type: string
      search_text:
        type: string
      timezone_id:
        type: string
      title:
        type: string
    type: object
  models.CreateCity:
    properties:
      city_code:
        type: string
      country_id:
        type: string
      country_name:
        type: string
      guid:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      offset:
        type: string
      timezone_id:
        type: string
      title:
        type: string
    type: object
  models.CreateCountry:
    properties:
      code:
        type: string
      continent:
        type: string
      guid:
        type: string
      title:
        type: string
    type: object
  models.CreateUser:
    properties:
      login:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.GetListAirportResponse:
    properties:
      airports:
        items:
          $ref: '#/definitions/models.Airport'
        type: array
      count:
        type: integer
    type: object
  models.GetListCityResponse:
    properties:
      cities:
        items:
          $ref: '#/definitions/models.City'
        type: array
      count:
        type: integer
    type: object
  models.GetListCountryResponse:
    properties:
      count:
        type: integer
      countries:
        items:
          $ref: '#/definitions/models.Country'
        type: array
    type: object
  models.GetListUserResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Login:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.UpdateAirport:
    properties:
      address:
        type: string
      city:
        type: string
      city_id:
        type: string
      code:
        type: string
      country:
        type: string
      country_id:
        type: string
      gmt:
        type: string
      guid:
        type: string
      id:
        type: string
      image:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      product_count:
        type: integer
      radius:
        type: string
      search_text:
        type: string
      timezone_id:
        type: string
      title:
        type: string
    type: object
  models.UpdateCity:
    properties:
      city_code:
        type: string
      country_id:
        type: string
      country_name:
        type: string
      guid:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      offset:
        type: string
      timezone_id:
        type: string
      title:
        type: string
    type: object
  models.UpdateCountry:
    properties:
      code:
        type: string
      continent:
        type: string
      guid:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  models.UpdateUser:
    properties:
      id:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://demo.com/support
  description: Create  Go REST API with JWT Authentication in Gin Framework
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: demo.com
  title: Swagger JWT API
  version: "1.0"
paths:
  /airport:
    get:
      consumes:
      - application/json
      description: Get List Airport
      operationId: get_list_airport
      parameters:
      - description: limit
        in: query
        name: limit
        type: number
      - description: offset
        in: query
        name: offset
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: GetListAirportResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.GetListAirportResponse'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Airport
      tags:
      - Airport
    post:
      consumes:
      - application/json
      description: Create Airport
      operationId: create_airport
      parameters:
      - description: CreateAirportRequestBody
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.CreateAirport'
      produces:
      - application/json
      responses:
        "200":
          description: AirportBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Airport'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Airport
      tags:
      - Airport
  /airport/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Airport
      operationId: delete_airport
      parameters:
      - description: DeleteAirportPath
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted Airport
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Airport
      tags:
      - Airport
    get:
      consumes:
      - application/json
      description: Get By Id Airport
      operationId: get_by_id_airport
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: AirportBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Airport'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By Id Airport
      tags:
      - Airport
    put:
      consumes:
      - application/json
      description: Update Airport
      operationId: update_airport
      parameters:
      - description: AirportPrimaryKey_ID
        in: path
        name: id
        required: true
        type: string
      - description: UpdateAirportBody
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAirport'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Airport
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Airport
      tags:
      - Airport
  /airport/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload file
      operationId: file_upload_airport
      parameters:
      - description: this is a test file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: We need ID!!
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "404":
          description: Can not find file
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Upload file
      tags:
      - Airport
  /city:
    get:
      consumes:
      - application/json
      description: Get List City
      operationId: get_list_city
      parameters:
      - description: limit
        in: query
        name: limit
        type: number
      - description: offset
        in: query
        name: offset
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: GetListCityResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.GetListCityResponse'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List City
      tags:
      - City
    post:
      consumes:
      - application/json
      description: Create City
      operationId: create_city
      parameters:
      - description: CreateCityRequestBody
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.CreateCity'
      produces:
      - application/json
      responses:
        "200":
          description: CityBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.City'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create City
      tags:
      - City
  /city/{id}:
    delete:
      consumes:
      - application/json
      description: Delete City
      operationId: delete_city
      parameters:
      - description: DeleteCityPath
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted City
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete City
      tags:
      - City
    get:
      consumes:
      - application/json
      description: Get By Id City
      operationId: get_by_id_city
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetListCityResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.City'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By Id City
      tags:
      - City
    put:
      consumes:
      - application/json
      description: Update City
      operationId: update_city
      parameters:
      - description: PrimaryKey
        in: path
        name: id
        required: true
        type: string
      - description: UpdateCityBody
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCity'
      produces:
      - application/json
      responses:
        "200":
          description: Updated City
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.City'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update City
      tags:
      - City
  /country:
    get:
      consumes:
      - application/json
      description: Get List Country
      operationId: get_list_country
      parameters:
      - description: limit
        in: query
        name: limit
        type: number
      - description: offset
        in: query
        name: offset
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: GetListCountryResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.GetListCountryResponse'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Country
      tags:
      - Country
    post:
      consumes:
      - application/json
      description: Create Country
      operationId: create_country
      parameters:
      - description: CreateCountryRequestBody
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.CreateCountry'
      produces:
      - application/json
      responses:
        "200":
          description: CountryBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Country'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Country
      tags:
      - Country
  /country/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Country
      operationId: delete_country
      parameters:
      - description: DeleteCountryPath
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted Country
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Country
      tags:
      - Country
    get:
      consumes:
      - application/json
      description: Get By Id Country
      operationId: get_by_id_country
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: CountryBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Country'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By Id Country
      tags:
      - Country
    put:
      consumes:
      - application/json
      description: Update Country
      operationId: update_country
      parameters:
      - description: CountryPrimaryKey_ID
        in: path
        name: id
        required: true
        type: string
      - description: UpdateCountryBody
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCountry'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Country
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Country
      tags:
      - Country
  /country/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload file
      operationId: file_upload_country
      parameters:
      - description: this is a test file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: We need ID!!
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "404":
          description: Can not find file
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Upload file
      tags:
      - Country
  /login:
    post:
      consumes:
      - application/json
      description: Get By Id Login
      operationId: login
      parameters:
      - description: LoginRequestBody
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: LoginBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Login'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By Id Login
      tags:
      - Login
  /upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload file
      operationId: file_upload
      parameters:
      - description: table_slug
        in: query
        name: table_slug
        required: true
        type: string
      - description: this is a test file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: We need ID!!
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "404":
          description: Can not find file
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Upload file
      tags:
      - Upload
  /user:
    get:
      consumes:
      - application/json
      description: Get List User
      operationId: get_list_user
      parameters:
      - description: limit
        in: query
        name: limit
        type: number
      - description: offset
        in: query
        name: offset
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: GetListUserResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.GetListUserResponse'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List User
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_user
      parameters:
      - description: CreateUserRequestBody
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: UserBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create User
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User
      operationId: delete_user
      parameters:
      - description: DeleteUserPath
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted User
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get By Id User
      operationId: get_by_id_user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: UserBody
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By Id User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      operationId: update_user
      parameters:
      - description: UserPrimaryKey_ID
        in: path
        name: id
        required: true
        type: string
      - description: UpdateUserBody
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Updated User
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update User
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
